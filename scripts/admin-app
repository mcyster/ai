#!/usr/bin/env bash
set -eu
set -o pipefail

usage="Usage: $(basename $0) [-h][-r][-f]
    -h - help
    -r - restart
    -f - run in forground

Starts the admin-app in the background
"

APP_PROFILE="${ADMIN_APP_PROFILE:-prod}"

restart=0
foreground=0
while [ $# -gt 0 ]; do
    case "$1" in
        -h|-\?)
            echo "$usage"
            exit 0
        ;;
        -r)
            restart=1
        ;;
	-f)
	    foreground=1
	;;
        *)
	    break
        ;;
    esac
    shift
done

if [ -z "$AI_HOME" ]; then
    echo "Error: AI_HOME not defined, have you setup the environment" 1>&2
    exit 1
fi

if [ -z "$EXTOLE_SUPER_USER_API_KEY" ]; then
    echo "Error: no environment variable EXTOLE_SUPER_USER_API_KEY" 1>&2
    exit 1
fi

if ! command -v java &>/dev/null; then
    echo "Error: java not found" 1>&2
    exit 1
fi

app_home=$AI_HOME/admin-app

mkdir -p $app_home/logs

jar="$(find $app_home/build/libs -name "admin-app*.jar" | grep -v "plain.jar" | sort | tail -1)"

app="libs/admin-app"

if [ $restart -eq 1 ]; then
    if pgrep -n -f $app >/dev/null; then
        echo -n "admin-app stopping..."
        pkill -f $app

        end=$((SECONDS+240))
        while pgrep -f $jar >/dev/null; do
            if [ $SECONDS -ge $end ]; then
                echo "failed."
                echo "Failed to stop admin-app within 2 minutes." 1>&2
                exit 1
            fi
            sleep 5
            echo -n "."
        done
        echo "stopped."
    fi
fi

if pgrep -f $app >/dev/null; then
    echo "admin-app already running on $(pgrep -f libs/admin-app)"
    exit 0
fi

echo "admin-app $jar last modified $(stat -c '%y' $jar)"

cd $app_home

app_cmd=(java -jar "$jar" --spring.profiles.active="$APP_PROFILE")

if [ "$foreground" == "1" ]; then
    echo "Running: ${app_cmd[*]}"
    "${app_cmd[@]}"
else
    log="$app_home/logs/app-output.log"
    echo "Running in background, logs: $log"
    nohup "${app_cmd[@]}" > "$log" 2>&1 &
    pid=$!
    echo "admin-app running in background as process: $pid"

    timeout=60
    port=9000
    interval=1
    echo "admin-app waiting for port $port to be available (timeout: ${timeout}s)..."

    until ss -anp | grep -q ":$port"; do
        sleep $interval
        timeout=$((timeout - interval))
        if [ $timeout -le 0 ]; then
            echo "Timeout reached. Port $port is not being listened on."
            tail -100 "$log"
            exit 1
        fi
    done

    echo "admin-app port $port is now being listened on."
    exit 0
fi


#!/usr/bin/env bash
set -eu
set -o pipefail
#

usage="Usage: $(basename $0) [-h] credentials_json_file refresh_token
    -h - help
    credentials_json_file
    refresh_token

Gets a short lived token
"

while [ $# -gt 0 ]; do
    case "$1" in
        -h|-\?)
            echo "$usage"
            exit 0
        ;;
        *)
            break
        ;;
    esac
    shift
done

CREDENTIALS_FILE="${1:-}"
if [ -z "$CREDENTIALS_FILE" ]; then
    echo "Error: no credentials json file specified, please download from google (can only download on create) and specify file as parameter"
    exit 1
fi
CLIENT_ID=$(jq -r '.web.client_id' "$CREDENTIALS_FILE")
CLIENT_SECRET=$(jq -r '.web.client_secret' "$CREDENTIALS_FILE")
TOKEN_URI=$(jq -r '.web.token_uri' "$CREDENTIALS_FILE")

REFRESH_TOKEN="${2:-}"
if [ -z "$REFRESH_TOKEN" ]; then
    echo "Error: no refresh token specified"
    exit 1
fi

TOKEN_RESPONSE=$(curl -s -X POST $TOKEN_URI \
  -d client_id=$CLIENT_ID \
  -d client_secret=$CLIENT_SECRET \
  -d refresh_token=$REFRESH_TOKEN \
  -d grant_type=refresh_token)

echo "Reponse: $TOKEN_RESPONSE"

ACCESS_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.access_token')

# Check for errors
if [[ "$ACCESS_TOKEN" == "null" || -z "$ACCESS_TOKEN" ]]; then
  echo "Error: Failed to retrieve access token"
  echo "$TOKEN_RESPONSE"
  exit 1
fi

echo "New Access Token: $ACCESS_TOKEN"
echo "Token expires in: $(echo $TOKEN_RESPONSE | jq -r '.expires_in') seconds"

